---
apiVersion: v1
kind: Service
metadata:
  name: app-api
spec:
  selector:
    app: app-api
  ports:
    - name: app-api
      port: 80
      targetPort: app-api
      protocol: TCP


---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app-api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: app-api
  template:
    metadata:
      labels:
        app: app-api
    spec:
      containers:
        - name: server
          image: app-api-server-tilt-ref
          env:
            - name: PORT
              value: "80"
            - name: POSTGRES_HOST
              value: postgres
            - name: POSTGRES_PORT
              value: "5432"
            - name: POSTGRES_USER
              value: root
            - name: PGPASSWORD
              value: root
            - name: POSTGRES_DB
              value: rootdb
          resources:
            limits:
              cpu: 200m
              memory: 250Mi
            requests:
              cpu: 200m
              memory: 250Mi
          ports:
            - containerPort: 80
              name: app-api
          command:
          - ash
          - -c
          - |
            set -o errexit
            set -o nounset
            # set -o xtrace

            if set +o | grep -F 'set +o pipefail' > /dev/null; then
              # shellcheck disable=SC3040
              set -o pipefail
            fi

            if set +o | grep -F 'set +o posix' > /dev/null; then
              # shellcheck disable=SC3040
              set -o posix
            fi

            timeout 120 sh -c "while ! timeout 1 ash -c 'nc -z ${POSTGRES_HOST} ${POSTGRES_PORT}'; do sleep 1; printf '%s' '.'; done";
            echo âˆš postgres port open;

            export POSTGRESQL_URL="postgres://${POSTGRES_USER}:${PGPASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}?sslmode=disable"

            /server-api
          readinessProbe:
            httpGet:
              path: /api/v1/health
              port: app-api
